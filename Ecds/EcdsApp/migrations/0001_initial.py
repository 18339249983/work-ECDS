# Generated by Django 2.1.2 on 2018-10-24 11:19

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Custormer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default='名称', help_text='客户名称', max_length=20)),
                ('email', models.CharField(blank=True, default='', help_text='邮箱', max_length=30, null=True)),
                ('company', models.CharField(default='', help_text='公司名称', max_length=40, null=True)),
                ('address', models.CharField(default='', help_text='地址', max_length=50, null=True)),
                ('phone', models.CharField(blank=True, default='', help_text='手机号', max_length=16, null=True)),
                ('mobile', models.CharField(blank=True, default='', help_text='固定电话', max_length=20, null=True)),
                ('qq', models.CharField(blank=True, default='', help_text='qq', max_length=20, null=True)),
                ('wechat', models.CharField(blank=True, default='', help_text='微信号', max_length=20, null=True)),
                ('web', models.CharField(blank=True, default='', help_text='网站', max_length=50, null=True)),
                ('industry', models.CharField(blank=True, default='', help_text='行业', max_length=50, null=True)),
                ('description', models.TextField(blank=True, default='', help_text='公司简介', null=True)),
            ],
            options={
                'verbose_name': '客户信息表',
                'verbose_name_plural': '客户信息表',
                'db_table': 'Custormer',
            },
        ),
        migrations.CreateModel(
            name='UserForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='用户名', max_length=16)),
                ('fileurl', models.CharField(help_text='存储路径', max_length=512)),
            ],
            options={
                'verbose_name': '上传信息表',
                'verbose_name_plural': '上传信息表',
                'db_table': 'UserForm',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='姓名', help_text='姓名', max_length=15, null=True)),
                ('age', models.IntegerField(default=1, help_text='年龄')),
                ('gender', models.BooleanField(default=True, help_text='性别', max_length=18)),
                ('phone', models.CharField(blank=True, default='', help_text='手机号码', max_length=16, null=True)),
                ('email', models.EmailField(blank=True, default='', help_text='邮箱', max_length=254, null=True)),
                ('address', models.CharField(blank=True, default='', help_text='地址', max_length=256, null=True)),
                ('birthday', models.DateField(default=datetime.date(2018, 1, 1), help_text='出生日期', null=True)),
                ('qq', models.CharField(blank=True, default='', help_text='qq', max_length=16, null=True)),
                ('wechat', models.CharField(blank=True, default='', help_text='微信', max_length=16, null=True)),
                ('job', models.CharField(blank=True, default='', help_text='工作', max_length=64, null=True)),
                ('salary', models.CharField(blank=True, default='', help_text='薪水', max_length=32, null=True)),
            ],
            options={
                'verbose_name': '用户信息表',
                'verbose_name_plural': '用户信息表',
                'db_table': 'userinfo',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=32, null=True, verbose_name='姓名')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生年月')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=8, verbose_name='性别')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='userinfo',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='custormer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
